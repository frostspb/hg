version: '3.7'
services:

  web: &web
    build:
      context: .
      dockerfile: ./docker/Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - media_volume:/home/app/web/front
    expose:
      - 8000
    env_file:
      - ./envs/.env.prod
    depends_on:
      - db

  frontend: &frontend
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend.prod
    ports:
      - 80:80

  db:
    container_name: hourglass_db_prod
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./envs/.env.prod.db
  nginx:
    build: ./docker/nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - media_volume:/home/app/web/front
    ports:
      - 8081:8081
    depends_on:
      - web
  redis:
    image: redis:alpine
    command: redis-server

  celeryworker:
    <<: *web
    image: hourglass_celeryworker
    container_name: hourglass_celeryworker
    depends_on:
      - redis
      - db

    ports: [ ]
    command: celery -A config worker -l info

  celerybeat:
    <<: *web
    image: hourglass_celerybeat
    container_name: hourglass_celerybeat
    depends_on:
      - redis
      - db
    ports: [ ]
    command: celery -A config.celery beat -l INFO
volumes:
  postgres_data:
  static_volume:
  media_volume: